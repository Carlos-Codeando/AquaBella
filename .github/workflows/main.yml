name: Build macOS Executable
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Check files
      run: |
        echo "Listing repository contents:"
        ls -la
        echo "Checking for specific files:"
        test -f icono.icns && echo "icono.icns exists" || echo "icono.icns missing"
        test -f Info.plist && echo "Info.plist exists" || echo "Info.plist missing"
        test -f requirements.txt && echo "requirements.txt exists" || echo "requirements.txt missing"
        test -d assets && echo "assets directory exists" || echo "assets directory missing"
    
    - name: Build macOS app bundle
      run: |
        echo "Starting PyInstaller build..."
        pyinstaller --name AquaBella \
          --add-data "assets:assets" \
          --add-data "asistentes.py:." \
          --add-data "control_sesiones.py:." \
          --add-data "database.py:." \
          --add-data "pacientes.py:." \
          --add-data "reportes.py:." \
          --add-data "tratamientos.py:." \
          --icon="icono.icns" \
          --windowed \
          --clean \
          --onefile \
          --target-arch universal2 \
          --codesign-identity=- \
          --osx-bundle-identifier "com.aquabella.app" \
          AquaBella.py
        
        echo "Creating app bundle structure..."
        mkdir -p dist/AquaBella.app/Contents/{MacOS,Resources}
        mv dist/AquaBella/* dist/AquaBella.app/Contents/MacOS/
        cp icono.icns dist/AquaBella.app/Contents/Resources/
        cp Info.plist dist/AquaBella.app/Contents/
        chmod +x dist/AquaBella.app/Contents/MacOS/AquaBella
    
    - name: Create DMG
      run: |
        echo "Creating DMG..."
        mkdir -p dist/dmg
        cp -r dist/AquaBella.app dist/dmg/
        hdiutil create -volname "AquaBella" -srcfolder dist/dmg -ov -format UDZO dist/AquaBella.dmg
    
    - name: Upload app artifact
      uses: actions/upload-artifact@v4
      with:
        name: AquaBella-macOS
        path: dist/AquaBella.app
        compression-level: 9
        
    - name: Upload DMG artifact
      uses: actions/upload-artifact@v4
      with:
        name: AquaBella-DMG
        path: dist/AquaBella.dmg
        compression-level: 9
